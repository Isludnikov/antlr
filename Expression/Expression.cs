using Antlr4.Runtime;
using Antlr4.Runtime.Tree;
using ExpressionAutogenerated;

namespace Antlr.Expression;

public class Expression
{
    private readonly IParseTree _parseTree;

    public Expression(string str)
    {
        var stream = new AntlrInputStream(str);
        var lexer = new ExpressionLexer(stream);
        var tokenStream = new CommonTokenStream(lexer);
        var parser = new ExpressionParser(tokenStream);
        _parseTree = parser.logicExpression();
        var parsedRule = tokenStream.GetText();
        if (parsedRule != str)
            throw new Exception($"Original [{str}] and parsed [{parsedRule}] rules do not match");
    }

    public ExpressionCalculatorValue Calculate(IDictionary<string, ExpressionCalculatorValue> variables,
        IExpressionCalculatorFunctions functions, IDictionary<string, IExpressionList> lists,
        Action<string> functionsLog, Action<string> undefinedVariablesLog)
    {
        var visitor = new ExpressionCalculatorVisitor(variables, functions, lists, functionsLog, undefinedVariablesLog);
        return visitor.Visit(_parseTree);
    }
}